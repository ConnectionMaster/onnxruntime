jobs:

- job: Linux_C_API_Packaging_CPU_x86
  pool: Linux-CPU
  steps:
    - template: templates/set-test-data-variables-step.yml
    - template: templates/set-version-number-variables-step.yml

    - script: 'tools/ci_build/github/linux/run_dockerbuild.sh -o ubuntu16.04 -d cpu -r $(Build.BinariesDirectory) -a x86 -x " --x86 --test_data_url $(TestDataUrl) --test_data_checksum $(TestDataChecksum)"'
      displayName: 'Build and Test Linux on Docker'
    - template: templates/c-api-artifacts-package-and-publish-steps-posix.yml
      parameters:
          buildConfig: 'Release'
          artifactName: 'onnxruntime-linux-x86-$(OnnxRuntimeVersion)'
          libraryName: 'libonnxruntime.so'
          commitId: $(OnnxRuntimeGitCommitHash)          
    - template: templates/clean-agent-build-directory-step.yml

- job: Windows_Packaging_CPU_x86
  pool: 'Win-CPU'
  variables:
    buildDirectory: '$(Build.BinariesDirectory)'
    buildConfig: 'RelWithDebInfo'
    buildArch: 'x86'

  steps:
    - template: templates/set-test-data-variables-step.yml
    - template: templates/set-version-number-variables-step.yml

    - template: templates/windows-build-tools-setup-steps.yml
      parameters:
        EnvSetupScript: 'setup_env.bat'
        buildArch: $(buildArch)
        setVcVars: false

    - template: templates/windows-build-and-test-steps.yml
      parameters:
        buildAdditionalParams: ' --use_openmp --x86 '
        buildArch: $(buildArch)
        msbuildPlatform: 'Win32'
        buildConfig: $(buildConfig)

    - template: templates/c-api-artifacts-package-and-publish-steps-windows.yml
      parameters:
        buildConfig: $(buildConfig)
        artifactName: 'onnxruntime-win-$(buildArch)-$(OnnxRuntimeVersion)'
        commitId: $(OnnxRuntimeGitCommitHash)
    - template: templates/clean-agent-build-directory-step.yml